server:
  port: 8090
spring:
  cloud:
    inetutils:
      preferred-networks=192.168.52.86:8848
    gateway:
      routes:
        - id: after_route
          uri: https://kixuan.github.io/
          predicates:
            #  哇趣注意不要空格
            - After=2018-01-20T06:06:06+08:00[Asia/Shanghai]
            - Path=/123/**
        # 将所有以 /api/ 开头的请求转发到 http://localhost:8123 上的目标服务。
        - id: api_route
          uri: http://localhost:8123
          predicates:
            - Path=/api/**
            #            这种的话就只能匹配一个后缀
            #            - Path=/api/{api_url}
            # 拦截器：添加请求头
          filters:
            - AddRequestHeader=xuan,past
            - AddRequestParameter=username,xuan
            # 定义了一个断路器过滤器，用于实现降级功能
            - name: CircuitBreaker
              args:
                name: myCircuitBreaker
                fallbackUri: forward:/fallback
        #        定义了一组断言，跳转到指定路径
        - id: fallback_route
          uri: https://kixuan.github.io/
          predicates:
            - Path=/fallback
      default-filters:
        - AddResponseHeader=source, xuan
#    discovery:
#      enabled: true
# 打印详细日志
#logging:
#  level:
#    org.springframework.cloud.gateway: trace

# 以下配置指定了应用的名称、使用的协议（Dubbo）、注册中心的类型（Nacos）和地址
dubbo:
  application:
    # 设置应用的名称
    name: dubbo-springboot-demo-provider
    enable-file-cache: false
    qosEnable: ture
    qosPort: 33333
    qosAcceptForeignIp: false
  # 指定使用 Dubbo 协议，且端口设置为 -1，表示随机分配可用端口
  protocol:
    name: dubbo
    port: 22225
  registry:
    # 配置注册中心为 Nacos，使用的地址是 nacos://localhost:8848
    id: nacos-registry
    address: nacos://localhost:8848
    parameters:
      register-consumer-url=true

